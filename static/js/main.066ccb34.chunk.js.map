{"version":3,"sources":["APIKey.js","components/layout/spinner.gif","components/layout/Navbar.js","components/layout/Footer.js","actions/searchActions.js","actions/types.js","components/home/SearchForm.js","components/layout/spinner.js","components/home/MovieCard.js","components/home/MovieContainer.js","components/home/Landing.js","reducers/searchReducer.js","reducers/index.js","store.js","components/home/Movie.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APIKey","Navbar","className","to","id","Footer","href","target","rel","setLoading","type","SearchForm","onChange","e","props","searchMovie","value","onSubmit","preventDefault","fetchMovie","text","this","name","placeholder","Component","connect","state","movies","dispatch","payload","axios","get","then","response","data","catch","err","console","log","Spinner","src","spinner","style","width","margin","display","alt","MovieCard","movie","Poster","Title","Year","imdbID","MovieContainer","content","Response","Search","map","index","key","Landing","loading","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Movie","fetchMovieDetails","match","params","movieInfo","Genre","Released","Rated","imdbRating","Director","Writer","Actors","Plot","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"4EAAAA,EAAOC,QAAU,CACbC,OAAS,a,mBCDbF,EAAOC,QAAU,IAA0B,qC,qNCuB5BE,EApBA,WACX,OACI,6BACI,yBAAKC,UAAU,oCACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,iBACX,kBAAC,IAAD,CAAMA,UAAU,6CAA6CC,GAAG,KAAhE,oBAIJ,wBAAID,UAAU,gDACV,wBAAIA,UAAU,gCACV,uBAAGA,UAAU,oBAAoBE,GAAG,oBCYjDC,EAzBA,WACX,OACI,6BACI,yBAAKH,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,kDAAf,iBAEI,0BAAMA,UAAU,mCAAhB,oBAFJ,WAKY,uBAAGA,UAAU,eAAeE,GAAG,eAL3C,+DAOI,uBACIE,KAAK,0BACLC,OAAO,SACPC,IAAI,uBAHR,a,yBCoBXC,EAAa,WACtB,MAAM,CACFC,KCjCe,Y,QCCjBC,E,2MAEFC,SAAW,SAAAC,GACP,EAAKC,MAAMC,YAAYF,EAAEN,OAAOS,Q,EAIpCC,SAAW,SAAAJ,GACPA,EAAEK,iBACF,EAAKJ,MAAMK,WAAW,EAAKL,MAAMM,MACjC,EAAKN,MAAML,c,wEAIX,OACI,yBAAKP,UAAU,8CACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,kBACV,wBAAIA,UAAU,iBADlB,qCAGA,0BAAME,GAAG,aAAaa,SAAUI,KAAKJ,UACjC,2BACIP,KAAK,OACLR,UAAU,eACVoB,KAAK,aACLC,YAAY,+BACZX,SAAUS,KAAKT,WAEnB,4BAAQF,KAAK,SAASR,UAAU,+BAAhC,iB,GA5BCsB,aA0CVC,eAJS,SAAAC,GAAK,MAAK,CAC9BN,KAAMM,EAAMC,OAAOP,QAGiB,CAACL,YF3Cd,SAAAK,GAAI,OAAI,SAAAQ,GAC/BA,EAAS,CACLlB,KCLoB,eDMpBmB,QAAST,MEwCqCD,WFpC5B,SAAAC,GAAI,OAAI,SAAAQ,GAC9BE,IACKC,IADL,0CAC4C/B,SAD5C,cACwDoB,IACnDY,MAAK,SAAAC,GAAQ,OACVL,EAAS,CACLlB,KCdW,cDeXmB,QAASI,EAASC,UAGzBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QE2BgC3B,cAAnDgB,CAAiEd,G,iBC/BjE4B,E,iLAXP,OACI,6BACI,yBACIC,IAAKC,IACLC,MAAO,CAACC,MAAO,QAASC,OAAQ,OAAQC,QAAS,SACjDC,IAAI,oB,GAPFtB,aCqBPuB,E,iLAlBD,IACCC,EAAS3B,KAAKP,MAAdkC,MACP,OACQ,yBAAK9C,UAAU,iBACX,yBAAKA,UAAU,4CACX,yBAAKA,UAAU,aAAasC,IAAKQ,EAAMC,OAAQH,IAAI,gBACnD,wBAAI5C,UAAU,yBACT8C,EAAME,MADX,MACqBF,EAAMG,MAE3B,kBAAC,IAAD,CAAMjD,UAAU,kBAAkBC,GAAI,UAAY6C,EAAMI,QAAxD,gBAEK,uBAAGlD,UAAU,qC,GAZlBsB,aCAlB6B,E,iLACQ,IAEFC,EADG3B,EAAUN,KAAKP,MAAfa,OAQP,OANA2B,EACwB,SAApB3B,EAAO4B,SACD5B,EAAO6B,OAAOC,KAAI,SAACT,EAAOU,GAAR,OAChB,kBAAC,EAAD,CAAWC,IAAKD,EAAOV,MAAOA,OAEhC,KAEN,yBAAK9C,UAAU,OACVoD,O,GAZY9B,aAsBdC,eAJS,SAAAC,GAAK,MAAK,CAC9BC,OAAQD,EAAMC,OAAOA,UAGVF,CAA2B4B,GCpBpCO,E,iLACQ,IACCC,EAAWxC,KAAKP,MAAhB+C,QACP,OACI,yBAAK3D,UAAU,aACX,kBAAC,EAAD,MACC2D,EAAU,kBAAC,EAAD,MAAc,kBAAC,EAAD,W,GANnBrC,aAgBPC,eAJS,SAAAC,GAAK,MAAK,CAC9BmC,QAASnC,EAAMC,OAAOkC,WAGXpC,CAA0BmC,G,gCCpBnCE,EAAe,CACjB1C,KAAM,GACNO,OAAQ,GACRkC,SAAS,EACTb,MAAO,ICHIe,4BAAgB,CAC3BpC,ODKW,WAAwC,IAA/BD,EAA8B,uDAAtBoC,EAAcE,EAAQ,uCAClD,OAAOA,EAAOtD,MACV,INXoB,eMYhB,sBACOgB,EADP,CAEIN,KAAM4C,EAAOnC,QACbgC,SAAS,IAEjB,INhBmB,cMiBf,sBACOnC,EADP,CAEIC,OAAQqC,EAAOnC,QACfgC,SAAS,IAEjB,INrB2B,sBMsBvB,sBACOnC,EADP,CAEIsB,MAAOgB,EAAOnC,QACdgC,SAAS,IAEjB,IN1Be,UM2BX,sBACOnC,EADP,CAEImC,SAAS,IAEjB,QACI,OAAOnC,ME9BbuC,EAAa,CAACC,KAMLC,EAHDC,sBAAYC,EAFL,GAEgCC,8BAChDC,kBAAe,WAAf,EAAmBN,K,QCJlBO,E,4LAEEnD,KAAKP,MAAM2D,kBAAkBpD,KAAKP,MAAM4D,MAAMC,OAAOvE,IACrDiB,KAAKP,MAAML,e,+BAEL,IAAD,EACoBY,KAAKP,MAAvBkC,EADF,EACEA,MAAOa,EADT,EACSA,QACVe,EACA,yBAAK1E,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,2BACX,yBAAKsC,IAAKQ,EAAMC,OAAQ/C,UAAU,YAAY4C,IAAI,YAEtD,yBAAK5C,UAAU,aACX,wBAAIA,UAAU,QAAQ8C,EAAME,OAC5B,wBAAIhD,UAAU,cACV,wBAAIA,UAAU,mBACV,0CADJ,IAC6B8C,EAAM6B,OAEnC,wBAAI3E,UAAU,mBACV,6CADJ,IACgC8C,EAAM8B,UAEtC,wBAAI5E,UAAU,mBACV,0CADJ,IAC6B8C,EAAM+B,OAEnC,wBAAI7E,UAAU,mBACV,gDADJ,IACmC8C,EAAMgC,YAEzC,wBAAI9E,UAAU,mBACV,6CADJ,IACgC8C,EAAMiC,UAEtC,wBAAI/E,UAAU,mBACV,2CADJ,IAC8B8C,EAAMkC,QAEpC,wBAAIhF,UAAU,mBACV,2CADJ,IAC8B8C,EAAMmC,WAKhD,yBAAKjF,UAAU,OACX,yBAAKA,UAAU,0CACX,yBAAKA,UAAU,aACX,qCACC8C,EAAMoC,KACP,6BACA,uBACI9E,KAAM,8BAAgC0C,EAAMI,OAC5C7C,OAAO,SACPC,IAAI,sBACJN,UAAU,mBAJd,gBAQA,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,8BAAvB,yBAQhBoD,EAAUO,EAAU,kBAAC,EAAD,MAAce,EACtC,OACI,6BACKtB,O,GAjEG9B,aA4ELC,eALS,SAAAC,GAAK,MAAK,CAC9BmC,QAASnC,EAAMC,OAAOkC,QACtBb,MAAOtB,EAAMC,OAAOqB,SAGgB,CAACyB,kBV3DR,SAAArE,GAAE,OAAI,SAAAwB,GACnCE,IACKC,IADL,0CAC4C/B,SAD5C,cACwDI,IACnD4B,MAAK,SAAAC,GAAQ,OACVL,EAAS,CACLlB,KCzBmB,sBD0BnBmB,QAASI,EAASC,UAGzBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QUkD0B3B,cAA7CgB,CAA0D+C,GCtD1Da,E,iLAfX,OACE,kBAAC,IAAD,CAAUlB,MAAOA,GACf,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,IAAIC,UAAW5B,IACjC,kBAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,aAAaC,UAAWhB,IAC1C,kBAAC,EAAD,a,GATMhD,aCEZiE,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASnB,MACvB,2DAsCN,SAASoB,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT/D,MAAK,SAAAoE,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB5E,QACfuE,UAAUC,cAAcO,YAI1BpE,QAAQC,IACN,iHAKE0D,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB/D,QAAQC,IAAI,sCAGR0D,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BjE,OAAM,SAAAyE,GACLvE,QAAQuE,MAAM,4CAA6CA,M,YCzFjEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDe1C,SAAkBhB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIgB,IAAIC,0BAAwBvB,OAAOC,SAAStF,MACpD6G,SAAWxB,OAAOC,SAASuB,OAIvC,OAGFxB,OAAOyB,iBAAiB,QAAQ,WAC9B,IAAMrB,EAAK,UAAMmB,0BAAN,sBAEPzB,IAgEV,SAAiCM,EAAOC,GAEtCqB,MAAMtB,EAAO,CACXuB,QAAS,CAAE,iBAAkB,YAE5BtF,MAAK,SAAAC,GAEJ,IAAMsF,EAActF,EAASqF,QAAQvF,IAAI,gBAEnB,MAApBE,EAASuF,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CxB,UAAUC,cAAcwB,MAAM1F,MAAK,SAAAoE,GACjCA,EAAauB,aAAa3F,MAAK,WAC7B2D,OAAOC,SAASgC,eAKpB9B,EAAgBC,EAAOC,MAG1B7D,OAAM,WACLE,QAAQC,IACN,oEAvFAuF,CAAwB9B,EAAOC,GAI/BC,UAAUC,cAAcwB,MAAM1F,MAAK,WACjCK,QAAQC,IACN,iHAMJwD,EAAgBC,EAAOC,OCtC/BE,K","file":"static/js/main.066ccb34.chunk.js","sourcesContent":["module.exports = {\r\n    APIKey : 'bcef1144'\r\n};","module.exports = __webpack_public_path__ + \"static/media/spinner.bd0201f1.gif\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return(\r\n        <div>\r\n            <nav className='navbar navbar-light bg-dark mb-5'>\r\n                <div className='container'>\r\n                    <div className='navbar-header'>\r\n                        <Link className=\"navbar-brand text-white text-lg brand-text\" to=\"/\">\r\n                            MovieSeriesInfo\r\n                        </Link>\r\n                    </div>\r\n                    <ul className='navbar-nav ml-auto text-light d-inline-block'>\r\n                        <li className='nav-item d-inline-block mr-4'>\r\n                            <i className=\"fab fa-imdb fa-5x\" id=\"imdb-logo\" />\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <div>\r\n            <div className='row'>\r\n                <div className='col-md-12'>\r\n                    <div className='footer p-3 mt-4 text-center bg-dark text-light'>\r\n                        Developed By :\r\n                        <span className='text-warning font-weight-normal'>\r\n                            Sahl Abdelrahman\r\n                        </span>\r\n                        , Using <i className='fab fa-react' id='react-logo'/>React Js &amp; Redux Js\r\n                        integrated with external Movies data API\r\n                        <a \r\n                            href='http://www.omdbapi.com/'\r\n                            target='_blank'\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            OMDB\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Footer;","import {SEARCH_MOVIE, FETCH_MOVIE, FETCH_MOVIE_DETAILS, LOADING} from './types';\r\nimport axios from 'axios';\r\nimport {APIKey} from '../APIKey';\r\nexport const searchMovie = text => dispatch => {\r\n    dispatch({\r\n        type: SEARCH_MOVIE,\r\n        payload: text\r\n    })\r\n}\r\n\r\nexport const fetchMovie = text => dispatch => {\r\n    axios\r\n        .get(`https://www.omdbapi.com/?apikey=${APIKey}&s=${text}`)\r\n        .then(response =>\r\n            dispatch({\r\n                type: FETCH_MOVIE,\r\n                payload: response.data\r\n            })\r\n        )\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const fetchMovieDetails = id => dispatch => {\r\n    axios\r\n        .get(`https://www.omdbapi.com/?apikey=${APIKey}&i=${id}`)\r\n        .then(response => \r\n            dispatch({\r\n                type: FETCH_MOVIE_DETAILS,\r\n                payload: response.data\r\n            })\r\n        )\r\n        .catch(err => console.log(err));\r\n}\r\n\r\nexport const setLoading = () => {\r\n    return{\r\n        type: LOADING\r\n    }\r\n}","export const SEARCH_MOVIE = 'SEARCH_MOVIE';\r\nexport const FETCH_MOVIE = 'FETCH_MOVIE';\r\nexport const FETCH_MOVIE_DETAILS = 'FETCH_MOVIE_DETAILS';\r\nexport const LOADING = 'LOADING';","import React, {Component} from 'react';\r\nimport {searchMovie, fetchMovie, setLoading} from '../../actions/searchActions';\r\nimport {connect} from 'react-redux';\r\n\r\nclass SearchForm extends Component {\r\n    \r\n    onChange = e => {\r\n        this.props.searchMovie(e.target.value);\r\n        \r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.fetchMovie(this.props.text);\r\n        this.props.setLoading();\r\n    };\r\n    \r\n    render (){\r\n        return (\r\n            <div className='jumbotron jumbotron-fluid mt-5 text-center'>\r\n                <div className='container'>\r\n                    <h1 className='display-4 mb-3'>\r\n                        <li className='fa fa-search' /> Search for a movie ,Tv series ..\r\n                    </h1>\r\n                    <form id='searchForm' onSubmit={this.onSubmit}>\r\n                        <input\r\n                            type='text'\r\n                            className='form-control'\r\n                            name='searchText'\r\n                            placeholder='Search Movies, TV Series ...'\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <button type='submit' className='btn btn-primary btn-bg mt-3'>\r\n                            Search\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    text: state.movies.text\r\n})\r\n\r\nexport default connect(mapStateToProps, {searchMovie, fetchMovie, setLoading}) (SearchForm);","import React, {Component} from 'react';\r\nimport spinner from './spinner.gif';\r\nclass Spinner extends Component{\r\n    render (){\r\n        return (\r\n            <div>\r\n                <img \r\n                    src={spinner}\r\n                    style={{width: '200px', margin: 'auto', display: 'block', }}\r\n                    alt='loading ..'\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Spinner;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass MovieCard extends Component {\r\n    render (){\r\n        const {movie} = this.props;\r\n        return (\r\n                <div className='col-md-3 mb-5'>\r\n                    <div className='card card-body bg-dark text-center h-100'>\r\n                        <img className='w-100 mb-2' src={movie.Poster} alt='Movie cover'/>\r\n                        <h5 className='text-light card-title'>\r\n                            {movie.Title} - {movie.Year}\r\n                        </h5>\r\n                        <Link className=\"btn btn-primary\" to={'/movie/' + movie.imdbID}>\r\n                            Movie Details\r\n                             <i className=\"fas fa-chevron-right ml-1\" />\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\nexport default MovieCard;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport MovieCard from './MovieCard';\r\n\r\nclass MovieContainer extends Component {\r\n    render (){\r\n        const {movies} = this.props;\r\n        let content = '';\r\n        content =\r\n            movies.Response === 'True'\r\n                ? movies.Search.map((movie, index) => (\r\n                    <MovieCard key={index} movie={movie} />\r\n                ))\r\n                : null;\r\n        return (\r\n            <div className='row'>\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    movies: state.movies.movies\r\n})\r\n\r\nexport default connect (mapStateToProps) (MovieContainer);","import React, {Component} from 'react';\r\nimport SearchForm from './SearchForm';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../layout/spinner';\r\nimport MovieContainer from './MovieContainer';\r\n\r\nclass Landing extends Component {\r\n    render (){\r\n        const {loading} = this.props\r\n        return (\r\n            <div className='container'>\r\n                <SearchForm />\r\n                {loading ? <Spinner /> : <MovieContainer />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.movies.loading \r\n})\r\n\r\nexport default connect(mapStateToProps) (Landing);","import { SEARCH_MOVIE, FETCH_MOVIE, FETCH_MOVIE_DETAILS, LOADING} from '../actions/types';\r\n\r\nconst initialState = {\r\n    text: '',\r\n    movies: [],\r\n    loading: false,\r\n    movie: []\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case SEARCH_MOVIE:\r\n            return{\r\n                ...state,\r\n                text: action.payload,\r\n                loading: false\r\n            };\r\n        case FETCH_MOVIE:\r\n            return{\r\n                ...state,\r\n                movies: action.payload,\r\n                loading: false\r\n            };\r\n        case FETCH_MOVIE_DETAILS:\r\n            return{\r\n                ...state,\r\n                movie: action.payload,\r\n                loading: false\r\n            };\r\n        case LOADING:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport searchReducer from './searchReducer';\r\n\r\nexport default combineReducers({\r\n    movies: searchReducer\r\n});","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension/developmentOnly';\r\nimport rootReducer from './reducers';\r\n\r\nconst middleware = [thunk];\r\nconst initialState = {};\r\n\r\nconst store = createStore(rootReducer, initialState, composeWithDevTools\r\n    (applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {fetchMovieDetails, setLoading} from '../../actions/searchActions';\r\nimport Spinner from '../layout/spinner';\r\nclass Movie extends Component {\r\n    componentDidMount (){\r\n        this.props.fetchMovieDetails(this.props.match.params.id);\r\n        this.props.setLoading();\r\n    }\r\n    render (){\r\n        const {movie, loading} = this.props;\r\n        let movieInfo = (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <div className='col-md-4 card card-body'>\r\n                        <img src={movie.Poster} className='thumbnail' alt='Poster'/>\r\n                    </div>\r\n                    <div className='col-md-8 '>\r\n                        <h2 className='mb-4'>{movie.Title}</h2>\r\n                        <ul className='list-group'>\r\n                            <li className='list-group-item'>\r\n                                <strong>Genre:</strong> {movie.Genre}\r\n                            </li>\r\n                            <li className='list-group-item'>\r\n                                <strong>Released:</strong> {movie.Released}\r\n                            </li>\r\n                            <li className='list-group-item'>\r\n                                <strong>Rated:</strong> {movie.Rated}\r\n                            </li>\r\n                            <li className='list-group-item'>\r\n                                <strong>IMDB Rating:</strong> {movie.imdbRating}\r\n                            </li>\r\n                            <li className='list-group-item'>\r\n                                <strong>Director:</strong> {movie.Director}\r\n                            </li>\r\n                            <li className='list-group-item'>\r\n                                <strong>Writer:</strong> {movie.Writer}\r\n                            </li>\r\n                            <li className='list-group-item'>\r\n                                <strong>Actors:</strong> {movie.Actors}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='card card-body bg-dark my-5 text-light'>\r\n                        <div className='col-md-12'>\r\n                            <h3>About</h3>\r\n                            {movie.Plot}\r\n                            <hr/>\r\n                            <a\r\n                                href={'https://www.imdb.com/title/' + movie.imdbID}\r\n                                target='_blank'\r\n                                rel='noopener noreferrer'\r\n                                className='btn btn-primary'\r\n                            >\r\n                                View on IMDB\r\n                            </a>\r\n                            <Link to='/' className='btn btn-default text-light'>\r\n                                Go Back To Search\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n        let content = loading ? <Spinner /> : movieInfo;\r\n        return (\r\n            <div>\r\n                {content}            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.movies.loading,\r\n    movie: state.movies.movie\r\n});\r\n\r\nexport default connect(mapStateToProps, {fetchMovieDetails, setLoading})(Movie);","import React, { Component} from 'react';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Footer from './components/layout/Footer';\nimport Landing from './components/home/Landing';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport {HashRouter as Router, Route} from 'react-router-dom';\nimport Movie from './components/home/Movie';\n\nclass App extends Component {\n  render (){\n    return(\n      <Provider store={store}>\n        <Router>\n          <div>\n            <Navbar />\n            <Route exact path='/' component={Landing} />\n            <Route exact path='/movie/:id' component={Movie} />\n            <Footer />\n          </div>\n        </Router>\n      </Provider>\n    )\n  }\n}\n\nexport default App;\n\n/*\n  using HashRouter instead of BrowserRouter because BrowserRouter make some issues when deploy this project in github pages \n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}